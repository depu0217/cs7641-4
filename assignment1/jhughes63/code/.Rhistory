load("C:\\Users\\Jeff\\Documents\\R\\workspace\\ch7 svm")
ls()
str(letter_classifier)
str(letters)
table(letters$yedgex)
?table()
?variance
??variance
library(rpart)
meanvar(letters$yedgex)
meanvar
??variance
??variance
var.linear(letters$yedgex)
??variance
library(boot)
var.linear(letters$yedgex)
summary(letters$yedgex)
set.seed(12345)
letter_rand<-letters[order(runif(20000)), ]
summary(letters$yedgex)
summary(letters_rand$yedgex)
summary(letter_rand$yedgex)
head(letters$yedgex)
head(letter_rand$yedgex)
letter_train <- letter_rand[1:18000, ]
letter_test <- letter_rand[18001:20000, ]
prop.table(table(letter_train$letter))
prop.table(table(letter_test$letter))
prop.table(table(letter_train$letter))
library(C50)
letter_model <- C5.0(letter_train[-1], letter_train$letter)
str(letter_train)
str(letter_model)
letter_model
head(letter_train$letter)
summary(letter_model)
letter_pred <- predict(letter_model, letter_test)
library(gmodels)
CrossTable(letter_test$letter, letter_pred, prop.chisq = FALSE, prop.r = FALSE, dnn = c('actual letter', 'predicted letter'))
letter_boost <- C5.0(letter_train[-1], letter_train$letter, trials = 10)
summary(letter_pred)
letter_boost
summary(letter_boost)
letter_boost_pred <- predict(letter_boost, letter_test)
CrossTable(letter_test$letter, letter_boost_pred, prop.chisq = FALSE, prop.c = FALSE, dnn = c('actual letter', 'predicted letter'))
save.image("C:\\Users\\Jeff\\Documents\\R\\workspace\\letters dataset using tree")
q()
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
getwd()
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/credit.R', echo=TRUE)
sink()
sink()
source('~/.active-rstudio-document', echo=TRUE)
head(credit_model)
head(credit_train)
head(credit_test)
library(nnet)
ir <- rbind(iris3[,,1],iris3[,,2],iris3[,,3])
targets <- class.ind( c(rep("s", 50), rep("c", 50), rep("v", 50)) )
samp <- c(sample(1:50,25), sample(51:100,25), sample(101:150,25))
ir1 <- nnet(ir[samp,], targets[samp,], size = 2, rang = 0.1,
decay = 5e-4, maxit = 200)
test.cl <- function(true, pred) {
true <- max.col(true)
cres <- max.col(pred)
table(true, cres)
}
test.cl(targets[-samp,], predict(ir1, ir[-samp,]))
head(iris)
tail(iris)
summary(test.cl$Species)
more(iris)
str(iris)
head(ir)
head(targets)
head(ir1)
head(ir[samp,])
head(iris3)
summary(iris3)
str(iris3)
tail(iris3)
iris3$length
head(infert)
tail(infert)
head(credit)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
head(credit_norm)
head(credit)
source('~/R/workspace/creditNN.R', echo=TRUE)
options
options()
options(verbose, TRUE)
options($verbose, TRUE)
options(verbose)
options
options()
options$verbose
options(verbose)
options(verbose)
verbose
.options$verbose
options.verbose()
--verbose
timeout
optoins(timeout)
options(timeout)
.Options
.Options(verbose)
.Options$verbose
getOption("verbose")
setOption("verbose", TRUE)
options("digits")
options(digits=5)
options("digits")
options(op)
options(digits=7)
options("verbose")
options(verbose=TRUE)
cummary(credit_norm$default)
summary(credit_norm$default)
summary(credit$default)
head(iris)
jah <- c(credit_norm, credit[15])
head(jah)
jah <-as.data.fram(credit_norm, credit[15])
jah <-as.data.frame(credit_norm, credit[15])
jah <-c(credit_norm, credit[15])
head(jah)
?data.frame
m <- cbind(1, 1:7) # the '1' (= shorter vector) is recycled
m
jah <-cbind(credit_norm, credit[15])
head(jah)
source('~/R/workspace/creditNN.R', echo=TRUE)
options(verbose=FALSE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
m <- cbind(1, 1:7) # the '1' (= shorter vector) is recycled
m
m <- cbind(m, 8:14)[, c(1, 3, 2)] # insert a column
m
cbind(1:7, diag(3)) # vector is subset -> warning
cbind(0, rbind(1, 1:3))
cbind(I = 0, X = rbind(a = 1, b = 1:3))  # use some names
xx <- data.frame(I = rep(0,2))
cbind(xx, X = rbind(a = 1, b = 1:3))   # named differently
cbind(0, matrix(1, nrow = 0, ncol = 4)) #> Warning (making sense)
dim(cbind(0, matrix(1, nrow = 2, ncol = 0))) #-> 2 x 1
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/infert.R', echo=TRUE)
source('~/R/workspace/infert.R', echo=TRUE)
source('~/R/workspace/infert.R', echo=TRUE)
source('~/R/workspace/infert.R', echo=TRUE)
source('~/R/workspace/infert.R', echo=TRUE)
head(infert)
plot(nn)
source('~/R/workspace/creditNN2.R', echo=TRUE)
source('~/R/workspace/creditNN2.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
plot(credit_model)
head(predicted_default)
myOutput <- cbind(predicted_default, credit_test[15])
head(myOutput)
write.csv(myOutput, file="jahNN")
write.csv(myOutput, file="jahNN.csv")
testCor<-cbind(1,c(0,1,1,1,1,1,1,1,1,1))
head(testCor)
cor(testCor[,1],testCor[,2])
testCor[,1]
testCor[,2]
testCor<-cbind(c(1,0,1,1,1,1,1,1,1,1),c(0,1,1,1,1,1,1,1,1,1))
cor(testCor[,1], testCor[,2])
testCor<-cbind(c(0,1,1,1,1,1,1,1,1,1),c(0,1,1,1,1,1,1,1,1,1))
cor(testCor[,1], testCor[,2])
testCor<-cbind(c(0,0,0,0,0,0,0,0,0,0),c(1,1,1,1,1,1,1,1,1,1))
cor(testCor[,1], testCor[,2])
testCor<-cbind(c(0,0,0,0,0,0,0,0,0,1),c(1,1,1,1,1,1,1,1,1,0))
cor(testCor[,1], testCor[,2])
testCor<-read.csv("jahNN-testCor.csv")
head(testCor)
cor(testCor$predicted_rounded, testCor$default)
head(testCor$predicted_rounded)
head(testCor$predicted_rounded)
rm(testCor)
testCor<-read.csv("jahNN-testCor.csv")
head(testCor$predicted_rounded)
cor(testCor$predicted_rounded, testCor$default)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN.R', echo=TRUE)
head(predicted_default)
CorTest<-cbind(predicted_default, credit_test[15])
head(CorTest)
write.csv(CorTest,"jahCortest2.csv")
source('~/R/workspace/creditNN2.R', echo=TRUE)
head(model_results)
source('~/R/workspace/creditNN.R', echo=TRUE)
source('~/R/workspace/creditNN2.R', echo=TRUE)
source('~/R/workspace/creditNN2.R', echo=TRUE)
source('~/R/workspace/creditNN2.R', echo=TRUE)
source('~/R/workspace/creditNN2.R', echo=TRUE)
source('~/R/workspace/creditNN2.R', echo=TRUE)
source('~/R/workspace/creditNN2.R', echo=TRUE)
source('~/R/workspace/creditNN3.R', echo=TRUE)
summary(credit_model)
plot(credit_model)
summary(credit_test[1:14])
head(credit_test[1:14])
tail(credit_test[1:14])
source('~/R/workspace/creditNN.R', echo=TRUE)
head(credit_model)
head(credit_model[1:14])
summary(credit_model)
source('~/R/workspace/letters.R', echo=TRUE)
source('~/R/workspace/letters.R', echo=TRUE)
source('~/R/workspace/letters.R', echo=TRUE)
source('~/ml/ass1/code/Credit-KNN-winnowed.R', echo=TRUE)
source('~/ml/ass1/code/Credit-NNET-winnowed.R', echo=TRUE)
source('~/ml/ass1/code/Credit-SVM-winnowed.R', echo=TRUE)
source('~/ml/ass1/code/Credit-NNET-winnowed.R', echo=TRUE)
source('~/ml/ass1/code/Credit-KNN-winnowed.R', echo=TRUE)
source('~/ml/ass1/code/Credit-KNN-winnowed.R', echo=TRUE)
source('~/ml/ass1/code/Credit-NNET-winnowed.R', echo=TRUE)
source('~/ml/ass1/code/Credit-NNET-winnowed.R', echo=TRUE)
source('~/ml/ass1/code/Credit-Boost.R', echo=TRUE)
source('~/ml/ass1/code/Credit-Tree.R', echo=TRUE)
summary(TreeModel)
summary(treeModel)
source('~/ml/ass1/code/Credit-Boost.R', echo=TRUE)
summary(treeModel)
source('~/ml/ass1/code/Credit-Tree.R', echo=TRUE)
summary(treeModel)
source('~/ml/ass1/code/Credit-NNET.R', echo=TRUE)
source('~/ml/ass1/code/Credit-NNET.R', echo=TRUE)
citation()
citation(nnet)
citation("nnet")
citation("C5.0")
citation("C50")
citation("Kernlab")
citation("kernlab")
citation("class")
citation("plot")
citation("plot.nnet")
citation("devtools")
rm (list=ls())
source('~/ml/ass1/code/Credit-Boost.R', echo=TRUE)
source('~/ml/ass1/code/Credit-Boost.R', echo=TRUE)
getwd()
source('~/ml/ass1/code/Credit-Boost.R', echo=TRUE)
source('~/ml/ass1/code/Credit-KNN.R', echo=TRUE)
source('~/ml/ass1/code/Credit-NNET.R', echo=TRUE)
source('~/ml/ass1/code/Credit-KNN.R', echo=TRUE)
source('~/ml/ass1/code/Credit-KNN.R', echo=TRUE)
source('~/ml/ass1/code/Credit-Boost.R', echo=TRUE)
source('~/ml/ass1/code/Credit-NNET.R', echo=TRUE)
source('~/ml/ass1/code/Credit-KNN.R', echo=TRUE)
source('~/ml/ass1/code/Credit-SVM.R', echo=TRUE)
source('~/ml/ass1/code/Credit-Tree.R', echo=TRUE)
source('~/ml/ass1/code/Letters-Boost.R', echo=TRUE)
source('~/ml/ass1/code/Letters-KNN.R', echo=TRUE)
source('~/ml/ass1/code/Letters-SVM.R', echo=TRUE)
source('~/ml/ass1/code/Letters-Tree.R', echo=TRUE)
source('~/ml/ass1/code/LoadPackages.R', echo=TRUE)
install.packages("C50")
source('~/ml/ass1/code/Letters-NNET.R', echo=TRUE)
source('~/ml/ass1/code/Letters-NNET.R', echo=TRUE)
source('~/ml/ass1/code/Letters-NNET.R', echo=TRUE)
